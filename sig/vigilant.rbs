module Vigilant
  DEBUG: "DEBUG"

  INFO: "INFO"

  WARNING: "WARNING"

  ERROR: "ERROR"

  DEFAULT_BATCH_SIZE: 10

  DEFAULT_FLUSH_INTERVAL: 5

  # A thread-safe logger that batches logs and sends them to Vigilant asynchronously
  class Logger
    @token: untyped

    @endpoint: untyped

    @insecure: untyped

    @batch_size: untyped

    @flush_interval: untyped

    @queue: untyped

    @mutex: untyped

    @batch: untyped

    @shutdown: untyped

    @dispatcher_thread: untyped

    # Initialize a Vigilant::Logger instance.
    #
    # @param endpoint [String] The base endpoint for the Vigilant API (e.g. "ingress.vigilant.run").
    # @param token [String] The authentication token for the Vigilant API.
    # @param insecure [Boolean] Whether to use HTTP instead of HTTPS (optional, defaults to false).
    def initialize: (endpoint: untyped, token: untyped, ?insecure: bool) -> void

    # Logs a TRACE message.
    #
    # @param body [String] The main text of the trace message.
    # @param attributes [Hash] Additional attributes for the log (optional).
    def trace: (untyped body, ?::Hash[untyped, untyped] attributes) -> untyped

    # Logs a DEBUG message.
    #
    # @param body [String] The main text of the debug message.
    # @param attributes [Hash] Additional attributes for the log (optional).
    def debug: (untyped body, ?::Hash[untyped, untyped] attributes) -> untyped

    # Logs an INFO message.
    #
    # @param body [String] The main text of the log message.
    # @param attributes [Hash] Additional attributes for the log (optional).
    def info: (untyped body, ?::Hash[untyped, untyped] attributes) -> untyped

    # Logs a WARNING message.
    #
    # @param body [String] The main text of the warning message.
    # @param attributes [Hash] Additional attributes for the log (optional).
    def warn: (untyped body, ?::Hash[untyped, untyped] attributes) -> untyped

    # Logs an ERROR message.
    #
    # @param body [String] The main text of the error message.
    # @param error [Exception] The error object.
    # @param attributes [Hash] Additional attributes for the log (optional).
    def error: (untyped body, ?untyped? error, ?::Hash[untyped, untyped] attributes) -> untyped

    def shutdown: () -> untyped

    private

    def enqueue_log: (untyped level, untyped body, untyped attributes) -> untyped

    def start_dispatcher: () -> untyped

    def flush_if_needed: (?bool force) -> untyped

    def flush!: () -> untyped

    def post_logs: (untyped batch_data) -> untyped
  end
end

module Vigilant
  VERSION: "0.0.2"
end
